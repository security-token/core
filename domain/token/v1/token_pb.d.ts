// @generated by protoc-gen-es v1.1.1
// @generated from file token/v1/token.proto (package token.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Property } from "../../common/v1/common_pb.js";

/**
 * @generated from message token.v1.SecurityToken
 */
export declare class SecurityToken extends Message<SecurityToken> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string symbol = 4;
   */
  symbol: string;

  /**
   * @generated from field: uint64 granularity = 5;
   */
  granularity: bigint;

  /**
   * @generated from field: uint64 cap = 6;
   */
  cap: bigint;

  /**
   * @generated from field: uint64 total_supply = 7;
   */
  totalSupply: bigint;

  /**
   * @generated from field: token.v1.SecurityToken.Metadata metadata = 10;
   */
  metadata?: SecurityToken_Metadata;

  constructor(data?: PartialMessage<SecurityToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.SecurityToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecurityToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecurityToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecurityToken;

  static equals(a: SecurityToken | PlainMessage<SecurityToken> | undefined, b: SecurityToken | PlainMessage<SecurityToken> | undefined): boolean;
}

/**
 * @generated from message token.v1.SecurityToken.Metadata
 */
export declare class SecurityToken_Metadata extends Message<SecurityToken_Metadata> {
  /**
   * @generated from field: string logo = 1;
   */
  logo: string;

  constructor(data?: PartialMessage<SecurityToken_Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.SecurityToken.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SecurityToken_Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SecurityToken_Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SecurityToken_Metadata;

  static equals(a: SecurityToken_Metadata | PlainMessage<SecurityToken_Metadata> | undefined, b: SecurityToken_Metadata | PlainMessage<SecurityToken_Metadata> | undefined): boolean;
}

/**
 * @generated from message token.v1.Issuer
 */
export declare class Issuer extends Message<Issuer> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: token.v1.Issuer.Metadata metadata = 10;
   */
  metadata?: Issuer_Metadata;

  constructor(data?: PartialMessage<Issuer>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Issuer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Issuer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Issuer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Issuer;

  static equals(a: Issuer | PlainMessage<Issuer> | undefined, b: Issuer | PlainMessage<Issuer> | undefined): boolean;
}

/**
 * @generated from message token.v1.Issuer.Metadata
 */
export declare class Issuer_Metadata extends Message<Issuer_Metadata> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string logo = 2;
   */
  logo: string;

  /**
   * @generated from field: string bg_image = 3;
   */
  bgImage: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  constructor(data?: PartialMessage<Issuer_Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Issuer.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Issuer_Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Issuer_Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Issuer_Metadata;

  static equals(a: Issuer_Metadata | PlainMessage<Issuer_Metadata> | undefined, b: Issuer_Metadata | PlainMessage<Issuer_Metadata> | undefined): boolean;
}

/**
 * @generated from message token.v1.Document
 */
export declare class Document extends Message<Document> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * @generated from field: string hash = 4;
   */
  hash: string;

  /**
   * @generated from field: token.v1.Document.Metadata metadata = 10;
   */
  metadata?: Document_Metadata;

  constructor(data?: PartialMessage<Document>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Document";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Document;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Document;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Document;

  static equals(a: Document | PlainMessage<Document> | undefined, b: Document | PlainMessage<Document> | undefined): boolean;
}

/**
 * @generated from message token.v1.Document.Metadata
 */
export declare class Document_Metadata extends Message<Document_Metadata> {
  /**
   * @generated from field: string icon = 1;
   */
  icon: string;

  constructor(data?: PartialMessage<Document_Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Document.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Document_Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Document_Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Document_Metadata;

  static equals(a: Document_Metadata | PlainMessage<Document_Metadata> | undefined, b: Document_Metadata | PlainMessage<Document_Metadata> | undefined): boolean;
}

/**
 * @generated from message token.v1.Partition
 */
export declare class Partition extends Message<Partition> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: repeated string modules = 3;
   */
  modules: string[];

  /**
   * @generated from field: token.v1.Partition.Metadata metadata = 10;
   */
  metadata?: Partition_Metadata;

  constructor(data?: PartialMessage<Partition>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Partition";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Partition;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Partition;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Partition;

  static equals(a: Partition | PlainMessage<Partition> | undefined, b: Partition | PlainMessage<Partition> | undefined): boolean;
}

/**
 * @generated from message token.v1.Partition.Metadata
 */
export declare class Partition_Metadata extends Message<Partition_Metadata> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated common.v1.Property properties = 2;
   */
  properties: Property[];

  constructor(data?: PartialMessage<Partition_Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "token.v1.Partition.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Partition_Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Partition_Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Partition_Metadata;

  static equals(a: Partition_Metadata | PlainMessage<Partition_Metadata> | undefined, b: Partition_Metadata | PlainMessage<Partition_Metadata> | undefined): boolean;
}

