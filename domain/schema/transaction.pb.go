// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: schema/transaction.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Transaction_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	Contract string                `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Network  uint32                `protobuf:"varint,3,opt,name=network,proto3" json:"network,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Transaction_DeployNewSecurityToken
	//	*Transaction_BulkIssueByPartition
	//	*Transaction_SetDocument
	//	*Transaction_IssueByPartition
	//	*Transaction_RedeemByPartition
	//	*Transaction_OperatorRedeemByPartition
	//	*Transaction_RenounceControl
	//	*Transaction_RenounceIssuance
	//	*Transaction_Pause
	//	*Transaction_Unpause
	//	*Transaction_TransferOwnership
	//	*Transaction_AuthorizeOperator
	//	*Transaction_RevokeOperator
	//	*Transaction_TransferByPartition
	//	*Transaction_OperatorTransferByPartition
	//	*Transaction_AuthorizeOperatorByPartition
	//	*Transaction_RevokeOperatorByPartition
	//	*Transaction_TransferWithData
	//	*Transaction_TransferFromWithData
	//	*Transaction_Transfer
	//	*Transaction_Approve
	//	*Transaction_TransferFrom
	//	*Transaction_SetCap
	//	*Transaction_SetModulesByPartition
	//	*Transaction_AddRole
	//	*Transaction_BulkAddRole
	//	*Transaction_RemoveRole
	//	*Transaction_RenounceRole
	//	*Transaction_DeploySpendingLimitsConstraintModule
	//	*Transaction_AddTimelock
	//	*Transaction_SetTimelock
	//	*Transaction_DeleteTimelock
	//	*Transaction_DeployTimeLockConstraintModule
	//	*Transaction_EditAmountTimeLock
	//	*Transaction_EditAccountTimeLock
	//	*Transaction_EditTimeLock
	//	*Transaction_DeployVestingPeriodConstraintModule
	//	*Transaction_SetVestingOptions
	//	*Transaction_DeployWhitelistConstraintModule
	//	*Transaction_EditWhitelist
	//	*Transaction_BulkEditWhitelist
	Data isTransaction_Data `protobuf_oneof:"data"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetMetadata() *Transaction_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Transaction) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Transaction) GetNetwork() uint32 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (m *Transaction) GetData() isTransaction_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Transaction) GetDeployNewSecurityToken() *Transaction_SecurityTokenFactory_DeployNewSecurityToken {
	if x, ok := x.GetData().(*Transaction_DeployNewSecurityToken); ok {
		return x.DeployNewSecurityToken
	}
	return nil
}

func (x *Transaction) GetBulkIssueByPartition() *Transaction_SecurityToken_BulkIssueByPartition {
	if x, ok := x.GetData().(*Transaction_BulkIssueByPartition); ok {
		return x.BulkIssueByPartition
	}
	return nil
}

func (x *Transaction) GetSetDocument() *Transaction_SecurityToken_SetDocument {
	if x, ok := x.GetData().(*Transaction_SetDocument); ok {
		return x.SetDocument
	}
	return nil
}

func (x *Transaction) GetIssueByPartition() *Transaction_SecurityToken_IssueByPartition {
	if x, ok := x.GetData().(*Transaction_IssueByPartition); ok {
		return x.IssueByPartition
	}
	return nil
}

func (x *Transaction) GetRedeemByPartition() *Transaction_SecurityToken_RedeemByPartition {
	if x, ok := x.GetData().(*Transaction_RedeemByPartition); ok {
		return x.RedeemByPartition
	}
	return nil
}

func (x *Transaction) GetOperatorRedeemByPartition() *Transaction_SecurityToken_OperatorRedeemByPartition {
	if x, ok := x.GetData().(*Transaction_OperatorRedeemByPartition); ok {
		return x.OperatorRedeemByPartition
	}
	return nil
}

func (x *Transaction) GetRenounceControl() *Transaction_SecurityToken_RenounceControl {
	if x, ok := x.GetData().(*Transaction_RenounceControl); ok {
		return x.RenounceControl
	}
	return nil
}

func (x *Transaction) GetRenounceIssuance() *Transaction_SecurityToken_RenounceIssuance {
	if x, ok := x.GetData().(*Transaction_RenounceIssuance); ok {
		return x.RenounceIssuance
	}
	return nil
}

func (x *Transaction) GetPause() *Transaction_Pausable_Pause {
	if x, ok := x.GetData().(*Transaction_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *Transaction) GetUnpause() *Transaction_Pausable_Unpause {
	if x, ok := x.GetData().(*Transaction_Unpause); ok {
		return x.Unpause
	}
	return nil
}

func (x *Transaction) GetTransferOwnership() *Transaction_Ownable_TransferOwnership {
	if x, ok := x.GetData().(*Transaction_TransferOwnership); ok {
		return x.TransferOwnership
	}
	return nil
}

func (x *Transaction) GetAuthorizeOperator() *Transaction_ERC1400Raw_AuthorizeOperator {
	if x, ok := x.GetData().(*Transaction_AuthorizeOperator); ok {
		return x.AuthorizeOperator
	}
	return nil
}

func (x *Transaction) GetRevokeOperator() *Transaction_ERC1400Raw_RevokeOperator {
	if x, ok := x.GetData().(*Transaction_RevokeOperator); ok {
		return x.RevokeOperator
	}
	return nil
}

func (x *Transaction) GetTransferByPartition() *Transaction_ERC1400Partition_TransferByPartition {
	if x, ok := x.GetData().(*Transaction_TransferByPartition); ok {
		return x.TransferByPartition
	}
	return nil
}

func (x *Transaction) GetOperatorTransferByPartition() *Transaction_ERC1400Partition_OperatorTransferByPartition {
	if x, ok := x.GetData().(*Transaction_OperatorTransferByPartition); ok {
		return x.OperatorTransferByPartition
	}
	return nil
}

func (x *Transaction) GetAuthorizeOperatorByPartition() *Transaction_ERC1400Partition_AuthorizeOperatorByPartition {
	if x, ok := x.GetData().(*Transaction_AuthorizeOperatorByPartition); ok {
		return x.AuthorizeOperatorByPartition
	}
	return nil
}

func (x *Transaction) GetRevokeOperatorByPartition() *Transaction_ERC1400Partition_RevokeOperatorByPartition {
	if x, ok := x.GetData().(*Transaction_RevokeOperatorByPartition); ok {
		return x.RevokeOperatorByPartition
	}
	return nil
}

func (x *Transaction) GetTransferWithData() *Transaction_ERC1400Partition_TransferWithData {
	if x, ok := x.GetData().(*Transaction_TransferWithData); ok {
		return x.TransferWithData
	}
	return nil
}

func (x *Transaction) GetTransferFromWithData() *Transaction_ERC1400Partition_TransferFromWithData {
	if x, ok := x.GetData().(*Transaction_TransferFromWithData); ok {
		return x.TransferFromWithData
	}
	return nil
}

func (x *Transaction) GetTransfer() *Transaction_ERC1400ERC20_Transfer {
	if x, ok := x.GetData().(*Transaction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *Transaction) GetApprove() *Transaction_ERC1400ERC20_Approve {
	if x, ok := x.GetData().(*Transaction_Approve); ok {
		return x.Approve
	}
	return nil
}

func (x *Transaction) GetTransferFrom() *Transaction_ERC1400ERC20_TransferFrom {
	if x, ok := x.GetData().(*Transaction_TransferFrom); ok {
		return x.TransferFrom
	}
	return nil
}

func (x *Transaction) GetSetCap() *Transaction_ERC1400Capped_SetCap {
	if x, ok := x.GetData().(*Transaction_SetCap); ok {
		return x.SetCap
	}
	return nil
}

func (x *Transaction) GetSetModulesByPartition() *Transaction_Constrainable_SetModulesByPartition {
	if x, ok := x.GetData().(*Transaction_SetModulesByPartition); ok {
		return x.SetModulesByPartition
	}
	return nil
}

func (x *Transaction) GetAddRole() *Transaction_Administrable_AddRole {
	if x, ok := x.GetData().(*Transaction_AddRole); ok {
		return x.AddRole
	}
	return nil
}

func (x *Transaction) GetBulkAddRole() *Transaction_Administrable_BulkAddRole {
	if x, ok := x.GetData().(*Transaction_BulkAddRole); ok {
		return x.BulkAddRole
	}
	return nil
}

func (x *Transaction) GetRemoveRole() *Transaction_Administrable_RemoveRole {
	if x, ok := x.GetData().(*Transaction_RemoveRole); ok {
		return x.RemoveRole
	}
	return nil
}

func (x *Transaction) GetRenounceRole() *Transaction_Administrable_RenounceRole {
	if x, ok := x.GetData().(*Transaction_RenounceRole); ok {
		return x.RenounceRole
	}
	return nil
}

func (x *Transaction) GetDeploySpendingLimitsConstraintModule() *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule {
	if x, ok := x.GetData().(*Transaction_DeploySpendingLimitsConstraintModule); ok {
		return x.DeploySpendingLimitsConstraintModule
	}
	return nil
}

func (x *Transaction) GetAddTimelock() *Transaction_SpendingLimitsConstraintModule_AddTimelock {
	if x, ok := x.GetData().(*Transaction_AddTimelock); ok {
		return x.AddTimelock
	}
	return nil
}

func (x *Transaction) GetSetTimelock() *Transaction_SpendingLimitsConstraintModule_SetTimelock {
	if x, ok := x.GetData().(*Transaction_SetTimelock); ok {
		return x.SetTimelock
	}
	return nil
}

func (x *Transaction) GetDeleteTimelock() *Transaction_SpendingLimitsConstraintModule_DeleteTimelock {
	if x, ok := x.GetData().(*Transaction_DeleteTimelock); ok {
		return x.DeleteTimelock
	}
	return nil
}

func (x *Transaction) GetDeployTimeLockConstraintModule() *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule {
	if x, ok := x.GetData().(*Transaction_DeployTimeLockConstraintModule); ok {
		return x.DeployTimeLockConstraintModule
	}
	return nil
}

func (x *Transaction) GetEditAmountTimeLock() *Transaction_TimeLockConstraintModule_EditAmountTimeLock {
	if x, ok := x.GetData().(*Transaction_EditAmountTimeLock); ok {
		return x.EditAmountTimeLock
	}
	return nil
}

func (x *Transaction) GetEditAccountTimeLock() *Transaction_TimeLockConstraintModule_EditAccountTimeLock {
	if x, ok := x.GetData().(*Transaction_EditAccountTimeLock); ok {
		return x.EditAccountTimeLock
	}
	return nil
}

func (x *Transaction) GetEditTimeLock() *Transaction_TimeLockConstraintModule_EditTimeLock {
	if x, ok := x.GetData().(*Transaction_EditTimeLock); ok {
		return x.EditTimeLock
	}
	return nil
}

func (x *Transaction) GetDeployVestingPeriodConstraintModule() *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule {
	if x, ok := x.GetData().(*Transaction_DeployVestingPeriodConstraintModule); ok {
		return x.DeployVestingPeriodConstraintModule
	}
	return nil
}

func (x *Transaction) GetSetVestingOptions() *Transaction_VestingPeriodConstraintModule_SetVestingOptions {
	if x, ok := x.GetData().(*Transaction_SetVestingOptions); ok {
		return x.SetVestingOptions
	}
	return nil
}

func (x *Transaction) GetDeployWhitelistConstraintModule() *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule {
	if x, ok := x.GetData().(*Transaction_DeployWhitelistConstraintModule); ok {
		return x.DeployWhitelistConstraintModule
	}
	return nil
}

func (x *Transaction) GetEditWhitelist() *Transaction_WhitelistConstraintModule_EditWhitelist {
	if x, ok := x.GetData().(*Transaction_EditWhitelist); ok {
		return x.EditWhitelist
	}
	return nil
}

func (x *Transaction) GetBulkEditWhitelist() *Transaction_WhitelistConstraintModule_BulkEditWhitelist {
	if x, ok := x.GetData().(*Transaction_BulkEditWhitelist); ok {
		return x.BulkEditWhitelist
	}
	return nil
}

type isTransaction_Data interface {
	isTransaction_Data()
}

type Transaction_DeployNewSecurityToken struct {
	DeployNewSecurityToken *Transaction_SecurityTokenFactory_DeployNewSecurityToken `protobuf:"bytes,4,opt,name=deployNewSecurityToken,proto3,oneof"`
}

type Transaction_BulkIssueByPartition struct {
	BulkIssueByPartition *Transaction_SecurityToken_BulkIssueByPartition `protobuf:"bytes,5,opt,name=bulkIssueByPartition,proto3,oneof"`
}

type Transaction_SetDocument struct {
	SetDocument *Transaction_SecurityToken_SetDocument `protobuf:"bytes,6,opt,name=setDocument,proto3,oneof"`
}

type Transaction_IssueByPartition struct {
	IssueByPartition *Transaction_SecurityToken_IssueByPartition `protobuf:"bytes,7,opt,name=issueByPartition,proto3,oneof"`
}

type Transaction_RedeemByPartition struct {
	RedeemByPartition *Transaction_SecurityToken_RedeemByPartition `protobuf:"bytes,8,opt,name=redeemByPartition,proto3,oneof"`
}

type Transaction_OperatorRedeemByPartition struct {
	OperatorRedeemByPartition *Transaction_SecurityToken_OperatorRedeemByPartition `protobuf:"bytes,9,opt,name=operatorRedeemByPartition,proto3,oneof"`
}

type Transaction_RenounceControl struct {
	RenounceControl *Transaction_SecurityToken_RenounceControl `protobuf:"bytes,10,opt,name=renounceControl,proto3,oneof"`
}

type Transaction_RenounceIssuance struct {
	RenounceIssuance *Transaction_SecurityToken_RenounceIssuance `protobuf:"bytes,11,opt,name=renounceIssuance,proto3,oneof"`
}

type Transaction_Pause struct {
	Pause *Transaction_Pausable_Pause `protobuf:"bytes,12,opt,name=pause,proto3,oneof"`
}

type Transaction_Unpause struct {
	Unpause *Transaction_Pausable_Unpause `protobuf:"bytes,13,opt,name=unpause,proto3,oneof"`
}

type Transaction_TransferOwnership struct {
	TransferOwnership *Transaction_Ownable_TransferOwnership `protobuf:"bytes,14,opt,name=transferOwnership,proto3,oneof"`
}

type Transaction_AuthorizeOperator struct {
	AuthorizeOperator *Transaction_ERC1400Raw_AuthorizeOperator `protobuf:"bytes,15,opt,name=authorizeOperator,proto3,oneof"`
}

type Transaction_RevokeOperator struct {
	RevokeOperator *Transaction_ERC1400Raw_RevokeOperator `protobuf:"bytes,16,opt,name=revokeOperator,proto3,oneof"`
}

type Transaction_TransferByPartition struct {
	TransferByPartition *Transaction_ERC1400Partition_TransferByPartition `protobuf:"bytes,17,opt,name=transferByPartition,proto3,oneof"`
}

type Transaction_OperatorTransferByPartition struct {
	OperatorTransferByPartition *Transaction_ERC1400Partition_OperatorTransferByPartition `protobuf:"bytes,18,opt,name=operatorTransferByPartition,proto3,oneof"`
}

type Transaction_AuthorizeOperatorByPartition struct {
	AuthorizeOperatorByPartition *Transaction_ERC1400Partition_AuthorizeOperatorByPartition `protobuf:"bytes,19,opt,name=authorizeOperatorByPartition,proto3,oneof"`
}

type Transaction_RevokeOperatorByPartition struct {
	RevokeOperatorByPartition *Transaction_ERC1400Partition_RevokeOperatorByPartition `protobuf:"bytes,20,opt,name=revokeOperatorByPartition,proto3,oneof"`
}

type Transaction_TransferWithData struct {
	TransferWithData *Transaction_ERC1400Partition_TransferWithData `protobuf:"bytes,21,opt,name=transferWithData,proto3,oneof"`
}

type Transaction_TransferFromWithData struct {
	TransferFromWithData *Transaction_ERC1400Partition_TransferFromWithData `protobuf:"bytes,22,opt,name=transferFromWithData,proto3,oneof"`
}

type Transaction_Transfer struct {
	Transfer *Transaction_ERC1400ERC20_Transfer `protobuf:"bytes,23,opt,name=transfer,proto3,oneof"`
}

type Transaction_Approve struct {
	Approve *Transaction_ERC1400ERC20_Approve `protobuf:"bytes,24,opt,name=approve,proto3,oneof"`
}

type Transaction_TransferFrom struct {
	TransferFrom *Transaction_ERC1400ERC20_TransferFrom `protobuf:"bytes,25,opt,name=transferFrom,proto3,oneof"`
}

type Transaction_SetCap struct {
	SetCap *Transaction_ERC1400Capped_SetCap `protobuf:"bytes,26,opt,name=setCap,proto3,oneof"`
}

type Transaction_SetModulesByPartition struct {
	SetModulesByPartition *Transaction_Constrainable_SetModulesByPartition `protobuf:"bytes,27,opt,name=setModulesByPartition,proto3,oneof"`
}

type Transaction_AddRole struct {
	AddRole *Transaction_Administrable_AddRole `protobuf:"bytes,28,opt,name=addRole,proto3,oneof"`
}

type Transaction_BulkAddRole struct {
	BulkAddRole *Transaction_Administrable_BulkAddRole `protobuf:"bytes,29,opt,name=bulkAddRole,proto3,oneof"`
}

type Transaction_RemoveRole struct {
	RemoveRole *Transaction_Administrable_RemoveRole `protobuf:"bytes,30,opt,name=removeRole,proto3,oneof"`
}

type Transaction_RenounceRole struct {
	RenounceRole *Transaction_Administrable_RenounceRole `protobuf:"bytes,31,opt,name=renounceRole,proto3,oneof"`
}

type Transaction_DeploySpendingLimitsConstraintModule struct {
	DeploySpendingLimitsConstraintModule *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule `protobuf:"bytes,32,opt,name=deploySpendingLimitsConstraintModule,proto3,oneof"`
}

type Transaction_AddTimelock struct {
	AddTimelock *Transaction_SpendingLimitsConstraintModule_AddTimelock `protobuf:"bytes,33,opt,name=addTimelock,proto3,oneof"`
}

type Transaction_SetTimelock struct {
	SetTimelock *Transaction_SpendingLimitsConstraintModule_SetTimelock `protobuf:"bytes,34,opt,name=setTimelock,proto3,oneof"`
}

type Transaction_DeleteTimelock struct {
	DeleteTimelock *Transaction_SpendingLimitsConstraintModule_DeleteTimelock `protobuf:"bytes,35,opt,name=deleteTimelock,proto3,oneof"`
}

type Transaction_DeployTimeLockConstraintModule struct {
	DeployTimeLockConstraintModule *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule `protobuf:"bytes,36,opt,name=deployTimeLockConstraintModule,proto3,oneof"`
}

type Transaction_EditAmountTimeLock struct {
	EditAmountTimeLock *Transaction_TimeLockConstraintModule_EditAmountTimeLock `protobuf:"bytes,37,opt,name=editAmountTimeLock,proto3,oneof"`
}

type Transaction_EditAccountTimeLock struct {
	EditAccountTimeLock *Transaction_TimeLockConstraintModule_EditAccountTimeLock `protobuf:"bytes,38,opt,name=editAccountTimeLock,proto3,oneof"`
}

type Transaction_EditTimeLock struct {
	EditTimeLock *Transaction_TimeLockConstraintModule_EditTimeLock `protobuf:"bytes,39,opt,name=editTimeLock,proto3,oneof"`
}

type Transaction_DeployVestingPeriodConstraintModule struct {
	DeployVestingPeriodConstraintModule *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule `protobuf:"bytes,40,opt,name=deployVestingPeriodConstraintModule,proto3,oneof"`
}

type Transaction_SetVestingOptions struct {
	SetVestingOptions *Transaction_VestingPeriodConstraintModule_SetVestingOptions `protobuf:"bytes,41,opt,name=setVestingOptions,proto3,oneof"`
}

type Transaction_DeployWhitelistConstraintModule struct {
	DeployWhitelistConstraintModule *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule `protobuf:"bytes,42,opt,name=deployWhitelistConstraintModule,proto3,oneof"`
}

type Transaction_EditWhitelist struct {
	EditWhitelist *Transaction_WhitelistConstraintModule_EditWhitelist `protobuf:"bytes,43,opt,name=editWhitelist,proto3,oneof"`
}

type Transaction_BulkEditWhitelist struct {
	BulkEditWhitelist *Transaction_WhitelistConstraintModule_BulkEditWhitelist `protobuf:"bytes,44,opt,name=bulkEditWhitelist,proto3,oneof"`
}

func (*Transaction_DeployNewSecurityToken) isTransaction_Data() {}

func (*Transaction_BulkIssueByPartition) isTransaction_Data() {}

func (*Transaction_SetDocument) isTransaction_Data() {}

func (*Transaction_IssueByPartition) isTransaction_Data() {}

func (*Transaction_RedeemByPartition) isTransaction_Data() {}

func (*Transaction_OperatorRedeemByPartition) isTransaction_Data() {}

func (*Transaction_RenounceControl) isTransaction_Data() {}

func (*Transaction_RenounceIssuance) isTransaction_Data() {}

func (*Transaction_Pause) isTransaction_Data() {}

func (*Transaction_Unpause) isTransaction_Data() {}

func (*Transaction_TransferOwnership) isTransaction_Data() {}

func (*Transaction_AuthorizeOperator) isTransaction_Data() {}

func (*Transaction_RevokeOperator) isTransaction_Data() {}

func (*Transaction_TransferByPartition) isTransaction_Data() {}

func (*Transaction_OperatorTransferByPartition) isTransaction_Data() {}

func (*Transaction_AuthorizeOperatorByPartition) isTransaction_Data() {}

func (*Transaction_RevokeOperatorByPartition) isTransaction_Data() {}

func (*Transaction_TransferWithData) isTransaction_Data() {}

func (*Transaction_TransferFromWithData) isTransaction_Data() {}

func (*Transaction_Transfer) isTransaction_Data() {}

func (*Transaction_Approve) isTransaction_Data() {}

func (*Transaction_TransferFrom) isTransaction_Data() {}

func (*Transaction_SetCap) isTransaction_Data() {}

func (*Transaction_SetModulesByPartition) isTransaction_Data() {}

func (*Transaction_AddRole) isTransaction_Data() {}

func (*Transaction_BulkAddRole) isTransaction_Data() {}

func (*Transaction_RemoveRole) isTransaction_Data() {}

func (*Transaction_RenounceRole) isTransaction_Data() {}

func (*Transaction_DeploySpendingLimitsConstraintModule) isTransaction_Data() {}

func (*Transaction_AddTimelock) isTransaction_Data() {}

func (*Transaction_SetTimelock) isTransaction_Data() {}

func (*Transaction_DeleteTimelock) isTransaction_Data() {}

func (*Transaction_DeployTimeLockConstraintModule) isTransaction_Data() {}

func (*Transaction_EditAmountTimeLock) isTransaction_Data() {}

func (*Transaction_EditAccountTimeLock) isTransaction_Data() {}

func (*Transaction_EditTimeLock) isTransaction_Data() {}

func (*Transaction_DeployVestingPeriodConstraintModule) isTransaction_Data() {}

func (*Transaction_SetVestingOptions) isTransaction_Data() {}

func (*Transaction_DeployWhitelistConstraintModule) isTransaction_Data() {}

func (*Transaction_EditWhitelist) isTransaction_Data() {}

func (*Transaction_BulkEditWhitelist) isTransaction_Data() {}

type Transaction_SecurityTokenFactory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_SecurityTokenFactory) Reset() {
	*x = Transaction_SecurityTokenFactory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityTokenFactory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityTokenFactory) ProtoMessage() {}

func (x *Transaction_SecurityTokenFactory) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityTokenFactory.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityTokenFactory) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 0}
}

type Transaction_SecurityToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_SecurityToken) Reset() {
	*x = Transaction_SecurityToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken) ProtoMessage() {}

func (x *Transaction_SecurityToken) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1}
}

type Transaction_Pausable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Pausable) Reset() {
	*x = Transaction_Pausable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Pausable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Pausable) ProtoMessage() {}

func (x *Transaction_Pausable) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Pausable.ProtoReflect.Descriptor instead.
func (*Transaction_Pausable) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 2}
}

type Transaction_Ownable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Ownable) Reset() {
	*x = Transaction_Ownable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Ownable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Ownable) ProtoMessage() {}

func (x *Transaction_Ownable) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Ownable.ProtoReflect.Descriptor instead.
func (*Transaction_Ownable) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 3}
}

type Transaction_ERC1400Raw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_ERC1400Raw) Reset() {
	*x = Transaction_ERC1400Raw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Raw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Raw) ProtoMessage() {}

func (x *Transaction_ERC1400Raw) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Raw.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Raw) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 4}
}

type Transaction_ERC1400Partition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_ERC1400Partition) Reset() {
	*x = Transaction_ERC1400Partition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition) ProtoMessage() {}

func (x *Transaction_ERC1400Partition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5}
}

type Transaction_ERC1400ERC20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_ERC1400ERC20) Reset() {
	*x = Transaction_ERC1400ERC20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400ERC20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400ERC20) ProtoMessage() {}

func (x *Transaction_ERC1400ERC20) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400ERC20.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400ERC20) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 6}
}

type Transaction_ERC1400Capped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_ERC1400Capped) Reset() {
	*x = Transaction_ERC1400Capped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Capped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Capped) ProtoMessage() {}

func (x *Transaction_ERC1400Capped) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Capped.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Capped) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 7}
}

type Transaction_Constrainable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Constrainable) Reset() {
	*x = Transaction_Constrainable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Constrainable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Constrainable) ProtoMessage() {}

func (x *Transaction_Constrainable) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Constrainable.ProtoReflect.Descriptor instead.
func (*Transaction_Constrainable) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 8}
}

type Transaction_Administrable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Administrable) Reset() {
	*x = Transaction_Administrable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Administrable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Administrable) ProtoMessage() {}

func (x *Transaction_Administrable) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Administrable.ProtoReflect.Descriptor instead.
func (*Transaction_Administrable) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 9}
}

type Transaction_SpendingLimitsConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_SpendingLimitsConstraintModule) Reset() {
	*x = Transaction_SpendingLimitsConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SpendingLimitsConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SpendingLimitsConstraintModule) ProtoMessage() {}

func (x *Transaction_SpendingLimitsConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SpendingLimitsConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_SpendingLimitsConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 10}
}

type Transaction_TimeLockConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_TimeLockConstraintModule) Reset() {
	*x = Transaction_TimeLockConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TimeLockConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TimeLockConstraintModule) ProtoMessage() {}

func (x *Transaction_TimeLockConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TimeLockConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_TimeLockConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 11}
}

type Transaction_VestingPeriodConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_VestingPeriodConstraintModule) Reset() {
	*x = Transaction_VestingPeriodConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_VestingPeriodConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_VestingPeriodConstraintModule) ProtoMessage() {}

func (x *Transaction_VestingPeriodConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_VestingPeriodConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_VestingPeriodConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 12}
}

type Transaction_WhitelistConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_WhitelistConstraintModule) Reset() {
	*x = Transaction_WhitelistConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_WhitelistConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_WhitelistConstraintModule) ProtoMessage() {}

func (x *Transaction_WhitelistConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_WhitelistConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_WhitelistConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 13}
}

// Metadata
type Transaction_Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash     string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Date     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Reverted string                 `protobuf:"bytes,3,opt,name=reverted,proto3" json:"reverted,omitempty"`
}

func (x *Transaction_Metadata) Reset() {
	*x = Transaction_Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Metadata) ProtoMessage() {}

func (x *Transaction_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Metadata.ProtoReflect.Descriptor instead.
func (*Transaction_Metadata) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Transaction_Metadata) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Transaction_Metadata) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Transaction_Metadata) GetReverted() string {
	if x != nil {
		return x.Reverted
	}
	return ""
}

type Transaction_SecurityTokenFactory_DeployNewSecurityToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol       string                  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Granularity  uint64                  `protobuf:"varint,3,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Cap          uint64                  `protobuf:"varint,4,opt,name=cap,proto3" json:"cap,omitempty"`
	Admin        string                  `protobuf:"bytes,5,opt,name=admin,proto3" json:"admin,omitempty"`
	Controller   string                  `protobuf:"bytes,6,opt,name=controller,proto3" json:"controller,omitempty"`
	Issuer       string                  `protobuf:"bytes,7,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Redeemer     string                  `protobuf:"bytes,8,opt,name=redeemer,proto3" json:"redeemer,omitempty"`
	ModuleEditor string                  `protobuf:"bytes,9,opt,name=module_editor,json=moduleEditor,proto3" json:"module_editor,omitempty"`
	Metadata     *SecurityToken_Metadata `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) Reset() {
	*x = Transaction_SecurityTokenFactory_DeployNewSecurityToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityTokenFactory_DeployNewSecurityToken) ProtoMessage() {}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityTokenFactory_DeployNewSecurityToken.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityTokenFactory_DeployNewSecurityToken) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetGranularity() uint64 {
	if x != nil {
		return x.Granularity
	}
	return 0
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetCap() uint64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetRedeemer() string {
	if x != nil {
		return x.Redeemer
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetModuleEditor() string {
	if x != nil {
		return x.ModuleEditor
	}
	return ""
}

func (x *Transaction_SecurityTokenFactory_DeployNewSecurityToken) GetMetadata() *SecurityToken_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Transaction_SecurityToken_BulkIssueByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition    []byte   `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	TokenHolders []string `protobuf:"bytes,2,rep,name=tokenHolders,proto3" json:"tokenHolders,omitempty"`
	Values       []uint64 `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
	Data         []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) Reset() {
	*x = Transaction_SecurityToken_BulkIssueByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_BulkIssueByPartition) ProtoMessage() {}

func (x *Transaction_SecurityToken_BulkIssueByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_BulkIssueByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_BulkIssueByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) GetTokenHolders() []string {
	if x != nil {
		return x.TokenHolders
	}
	return nil
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) GetValues() []uint64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Transaction_SecurityToken_BulkIssueByPartition) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Transaction_SecurityToken_SetDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentName []byte `protobuf:"bytes,1,opt,name=documentName,proto3" json:"documentName,omitempty"`
	Uri          string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	DocumentHash []byte `protobuf:"bytes,3,opt,name=documentHash,proto3" json:"documentHash,omitempty"`
}

func (x *Transaction_SecurityToken_SetDocument) Reset() {
	*x = Transaction_SecurityToken_SetDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_SetDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_SetDocument) ProtoMessage() {}

func (x *Transaction_SecurityToken_SetDocument) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_SetDocument.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_SetDocument) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Transaction_SecurityToken_SetDocument) GetDocumentName() []byte {
	if x != nil {
		return x.DocumentName
	}
	return nil
}

func (x *Transaction_SecurityToken_SetDocument) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Transaction_SecurityToken_SetDocument) GetDocumentHash() []byte {
	if x != nil {
		return x.DocumentHash
	}
	return nil
}

type Transaction_SecurityToken_IssueByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Recipient string `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transaction_SecurityToken_IssueByPartition) Reset() {
	*x = Transaction_SecurityToken_IssueByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_IssueByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_IssueByPartition) ProtoMessage() {}

func (x *Transaction_SecurityToken_IssueByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_IssueByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_IssueByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Transaction_SecurityToken_IssueByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_SecurityToken_IssueByPartition) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Transaction_SecurityToken_IssueByPartition) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Transaction_SecurityToken_RedeemByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Value     uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Data      []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Transaction_SecurityToken_RedeemByPartition) Reset() {
	*x = Transaction_SecurityToken_RedeemByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_RedeemByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_RedeemByPartition) ProtoMessage() {}

func (x *Transaction_SecurityToken_RedeemByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_RedeemByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_RedeemByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *Transaction_SecurityToken_RedeemByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_SecurityToken_RedeemByPartition) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_SecurityToken_RedeemByPartition) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Transaction_SecurityToken_OperatorRedeemByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition    []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	TokenHolder  string `protobuf:"bytes,2,opt,name=tokenHolder,proto3" json:"tokenHolder,omitempty"`
	Value        uint64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Data         []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	OperatorData []byte `protobuf:"bytes,5,opt,name=operatorData,proto3" json:"operatorData,omitempty"`
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) Reset() {
	*x = Transaction_SecurityToken_OperatorRedeemByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_OperatorRedeemByPartition) ProtoMessage() {}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_OperatorRedeemByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_OperatorRedeemByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 4}
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) GetTokenHolder() string {
	if x != nil {
		return x.TokenHolder
	}
	return ""
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction_SecurityToken_OperatorRedeemByPartition) GetOperatorData() []byte {
	if x != nil {
		return x.OperatorData
	}
	return nil
}

type Transaction_SecurityToken_RenounceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_SecurityToken_RenounceControl) Reset() {
	*x = Transaction_SecurityToken_RenounceControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_RenounceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_RenounceControl) ProtoMessage() {}

func (x *Transaction_SecurityToken_RenounceControl) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_RenounceControl.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_RenounceControl) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 5}
}

type Transaction_SecurityToken_RenounceIssuance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_SecurityToken_RenounceIssuance) Reset() {
	*x = Transaction_SecurityToken_RenounceIssuance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SecurityToken_RenounceIssuance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SecurityToken_RenounceIssuance) ProtoMessage() {}

func (x *Transaction_SecurityToken_RenounceIssuance) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SecurityToken_RenounceIssuance.ProtoReflect.Descriptor instead.
func (*Transaction_SecurityToken_RenounceIssuance) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 1, 6}
}

type Transaction_Pausable_Pause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Pausable_Pause) Reset() {
	*x = Transaction_Pausable_Pause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Pausable_Pause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Pausable_Pause) ProtoMessage() {}

func (x *Transaction_Pausable_Pause) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Pausable_Pause.ProtoReflect.Descriptor instead.
func (*Transaction_Pausable_Pause) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 2, 0}
}

type Transaction_Pausable_Unpause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Transaction_Pausable_Unpause) Reset() {
	*x = Transaction_Pausable_Unpause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Pausable_Unpause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Pausable_Unpause) ProtoMessage() {}

func (x *Transaction_Pausable_Unpause) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Pausable_Unpause.ProtoReflect.Descriptor instead.
func (*Transaction_Pausable_Unpause) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 2, 1}
}

type Transaction_Ownable_TransferOwnership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewOwner string `protobuf:"bytes,1,opt,name=newOwner,proto3" json:"newOwner,omitempty"`
}

func (x *Transaction_Ownable_TransferOwnership) Reset() {
	*x = Transaction_Ownable_TransferOwnership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Ownable_TransferOwnership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Ownable_TransferOwnership) ProtoMessage() {}

func (x *Transaction_Ownable_TransferOwnership) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Ownable_TransferOwnership.ProtoReflect.Descriptor instead.
func (*Transaction_Ownable_TransferOwnership) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *Transaction_Ownable_TransferOwnership) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

type Transaction_ERC1400Raw_AuthorizeOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *Transaction_ERC1400Raw_AuthorizeOperator) Reset() {
	*x = Transaction_ERC1400Raw_AuthorizeOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Raw_AuthorizeOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Raw_AuthorizeOperator) ProtoMessage() {}

func (x *Transaction_ERC1400Raw_AuthorizeOperator) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Raw_AuthorizeOperator.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Raw_AuthorizeOperator) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (x *Transaction_ERC1400Raw_AuthorizeOperator) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Transaction_ERC1400Raw_RevokeOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *Transaction_ERC1400Raw_RevokeOperator) Reset() {
	*x = Transaction_ERC1400Raw_RevokeOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Raw_RevokeOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Raw_RevokeOperator) ProtoMessage() {}

func (x *Transaction_ERC1400Raw_RevokeOperator) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Raw_RevokeOperator.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Raw_RevokeOperator) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 4, 1}
}

func (x *Transaction_ERC1400Raw_RevokeOperator) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Transaction_ERC1400Partition_TransferByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	To        string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value     uint64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Calldata  []byte `protobuf:"bytes,4,opt,name=calldata,proto3" json:"calldata,omitempty"`
}

func (x *Transaction_ERC1400Partition_TransferByPartition) Reset() {
	*x = Transaction_ERC1400Partition_TransferByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_TransferByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_TransferByPartition) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_TransferByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_TransferByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_TransferByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *Transaction_ERC1400Partition_TransferByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_ERC1400Partition_TransferByPartition) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400Partition_TransferByPartition) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_ERC1400Partition_TransferByPartition) GetCalldata() []byte {
	if x != nil {
		return x.Calldata
	}
	return nil
}

type Transaction_ERC1400Partition_OperatorTransferByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition    []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	From         string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To           string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value        uint64 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	Data         []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	OperatorData []byte `protobuf:"bytes,6,opt,name=operatorData,proto3" json:"operatorData,omitempty"`
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) Reset() {
	*x = Transaction_ERC1400Partition_OperatorTransferByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_OperatorTransferByPartition) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_OperatorTransferByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_OperatorTransferByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 1}
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction_ERC1400Partition_OperatorTransferByPartition) GetOperatorData() []byte {
	if x != nil {
		return x.OperatorData
	}
	return nil
}

type Transaction_ERC1400Partition_AuthorizeOperatorByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Operator  string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *Transaction_ERC1400Partition_AuthorizeOperatorByPartition) Reset() {
	*x = Transaction_ERC1400Partition_AuthorizeOperatorByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_AuthorizeOperatorByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_AuthorizeOperatorByPartition) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_AuthorizeOperatorByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_AuthorizeOperatorByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_AuthorizeOperatorByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 2}
}

func (x *Transaction_ERC1400Partition_AuthorizeOperatorByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_ERC1400Partition_AuthorizeOperatorByPartition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Transaction_ERC1400Partition_RevokeOperatorByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition []byte `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Operator  string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *Transaction_ERC1400Partition_RevokeOperatorByPartition) Reset() {
	*x = Transaction_ERC1400Partition_RevokeOperatorByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_RevokeOperatorByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_RevokeOperatorByPartition) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_RevokeOperatorByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_RevokeOperatorByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_RevokeOperatorByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 3}
}

func (x *Transaction_ERC1400Partition_RevokeOperatorByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_ERC1400Partition_RevokeOperatorByPartition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

type Transaction_ERC1400Partition_TransferWithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To    string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Transaction_ERC1400Partition_TransferWithData) Reset() {
	*x = Transaction_ERC1400Partition_TransferWithData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_TransferWithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_TransferWithData) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_TransferWithData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_TransferWithData.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_TransferWithData) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 4}
}

func (x *Transaction_ERC1400Partition_TransferWithData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400Partition_TransferWithData) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_ERC1400Partition_TransferWithData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Transaction_ERC1400Partition_TransferFromWithData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To           string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value        uint64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Data         []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	OperatorData []byte `protobuf:"bytes,5,opt,name=operatorData,proto3" json:"operatorData,omitempty"`
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) Reset() {
	*x = Transaction_ERC1400Partition_TransferFromWithData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Partition_TransferFromWithData) ProtoMessage() {}

func (x *Transaction_ERC1400Partition_TransferFromWithData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Partition_TransferFromWithData.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Partition_TransferFromWithData) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 5, 5}
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction_ERC1400Partition_TransferFromWithData) GetOperatorData() []byte {
	if x != nil {
		return x.OperatorData
	}
	return nil
}

type Transaction_ERC1400ERC20_Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To    string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Transaction_ERC1400ERC20_Transfer) Reset() {
	*x = Transaction_ERC1400ERC20_Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400ERC20_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400ERC20_Transfer) ProtoMessage() {}

func (x *Transaction_ERC1400ERC20_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400ERC20_Transfer.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400ERC20_Transfer) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Transaction_ERC1400ERC20_Transfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400ERC20_Transfer) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Transaction_ERC1400ERC20_Approve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spender string `protobuf:"bytes,1,opt,name=spender,proto3" json:"spender,omitempty"`
	Value   uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Transaction_ERC1400ERC20_Approve) Reset() {
	*x = Transaction_ERC1400ERC20_Approve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400ERC20_Approve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400ERC20_Approve) ProtoMessage() {}

func (x *Transaction_ERC1400ERC20_Approve) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400ERC20_Approve.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400ERC20_Approve) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *Transaction_ERC1400ERC20_Approve) GetSpender() string {
	if x != nil {
		return x.Spender
	}
	return ""
}

func (x *Transaction_ERC1400ERC20_Approve) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Transaction_ERC1400ERC20_TransferFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value uint64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Transaction_ERC1400ERC20_TransferFrom) Reset() {
	*x = Transaction_ERC1400ERC20_TransferFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400ERC20_TransferFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400ERC20_TransferFrom) ProtoMessage() {}

func (x *Transaction_ERC1400ERC20_TransferFrom) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400ERC20_TransferFrom.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400ERC20_TransferFrom) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 6, 2}
}

func (x *Transaction_ERC1400ERC20_TransferFrom) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction_ERC1400ERC20_TransferFrom) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_ERC1400ERC20_TransferFrom) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Transaction_ERC1400Capped_SetCap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewCap uint64 `protobuf:"varint,1,opt,name=newCap,proto3" json:"newCap,omitempty"`
}

func (x *Transaction_ERC1400Capped_SetCap) Reset() {
	*x = Transaction_ERC1400Capped_SetCap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_ERC1400Capped_SetCap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_ERC1400Capped_SetCap) ProtoMessage() {}

func (x *Transaction_ERC1400Capped_SetCap) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_ERC1400Capped_SetCap.ProtoReflect.Descriptor instead.
func (*Transaction_ERC1400Capped_SetCap) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 7, 0}
}

func (x *Transaction_ERC1400Capped_SetCap) GetNewCap() uint64 {
	if x != nil {
		return x.NewCap
	}
	return 0
}

type Transaction_Constrainable_SetModulesByPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partition  []byte   `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	NewModules []string `protobuf:"bytes,2,rep,name=newModules,proto3" json:"newModules,omitempty"`
}

func (x *Transaction_Constrainable_SetModulesByPartition) Reset() {
	*x = Transaction_Constrainable_SetModulesByPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Constrainable_SetModulesByPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Constrainable_SetModulesByPartition) ProtoMessage() {}

func (x *Transaction_Constrainable_SetModulesByPartition) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Constrainable_SetModulesByPartition.ProtoReflect.Descriptor instead.
func (*Transaction_Constrainable_SetModulesByPartition) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 8, 0}
}

func (x *Transaction_Constrainable_SetModulesByPartition) GetPartition() []byte {
	if x != nil {
		return x.Partition
	}
	return nil
}

func (x *Transaction_Constrainable_SetModulesByPartition) GetNewModules() []string {
	if x != nil {
		return x.NewModules
	}
	return nil
}

type Transaction_Administrable_AddRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    []byte `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Transaction_Administrable_AddRole) Reset() {
	*x = Transaction_Administrable_AddRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Administrable_AddRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Administrable_AddRole) ProtoMessage() {}

func (x *Transaction_Administrable_AddRole) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Administrable_AddRole.ProtoReflect.Descriptor instead.
func (*Transaction_Administrable_AddRole) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 9, 0}
}

func (x *Transaction_Administrable_AddRole) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Transaction_Administrable_AddRole) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Transaction_Administrable_BulkAddRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles    [][]byte `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	Accounts []string `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *Transaction_Administrable_BulkAddRole) Reset() {
	*x = Transaction_Administrable_BulkAddRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Administrable_BulkAddRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Administrable_BulkAddRole) ProtoMessage() {}

func (x *Transaction_Administrable_BulkAddRole) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Administrable_BulkAddRole.ProtoReflect.Descriptor instead.
func (*Transaction_Administrable_BulkAddRole) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 9, 1}
}

func (x *Transaction_Administrable_BulkAddRole) GetRoles() [][]byte {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Transaction_Administrable_BulkAddRole) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type Transaction_Administrable_RemoveRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    []byte `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *Transaction_Administrable_RemoveRole) Reset() {
	*x = Transaction_Administrable_RemoveRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Administrable_RemoveRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Administrable_RemoveRole) ProtoMessage() {}

func (x *Transaction_Administrable_RemoveRole) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Administrable_RemoveRole.ProtoReflect.Descriptor instead.
func (*Transaction_Administrable_RemoveRole) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 9, 2}
}

func (x *Transaction_Administrable_RemoveRole) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Transaction_Administrable_RemoveRole) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type Transaction_Administrable_RenounceRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role []byte `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *Transaction_Administrable_RenounceRole) Reset() {
	*x = Transaction_Administrable_RenounceRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_Administrable_RenounceRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Administrable_RenounceRole) ProtoMessage() {}

func (x *Transaction_Administrable_RenounceRole) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Administrable_RenounceRole.ProtoReflect.Descriptor instead.
func (*Transaction_Administrable_RenounceRole) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 9, 3}
}

func (x *Transaction_Administrable_RenounceRole) GetRole() []byte {
	if x != nil {
		return x.Role
	}
	return nil
}

type Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress string `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
}

func (x *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) Reset() {
	*x = Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) ProtoMessage() {
}

func (x *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 10, 0}
}

func (x *Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

type Transaction_SpendingLimitsConstraintModule_AddTimelock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodLength  *durationpb.Duration `protobuf:"bytes,1,opt,name=periodLength,proto3" json:"periodLength,omitempty"`
	AmountAllowed uint64               `protobuf:"varint,2,opt,name=amountAllowed,proto3" json:"amountAllowed,omitempty"`
}

func (x *Transaction_SpendingLimitsConstraintModule_AddTimelock) Reset() {
	*x = Transaction_SpendingLimitsConstraintModule_AddTimelock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SpendingLimitsConstraintModule_AddTimelock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SpendingLimitsConstraintModule_AddTimelock) ProtoMessage() {}

func (x *Transaction_SpendingLimitsConstraintModule_AddTimelock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SpendingLimitsConstraintModule_AddTimelock.ProtoReflect.Descriptor instead.
func (*Transaction_SpendingLimitsConstraintModule_AddTimelock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 10, 1}
}

func (x *Transaction_SpendingLimitsConstraintModule_AddTimelock) GetPeriodLength() *durationpb.Duration {
	if x != nil {
		return x.PeriodLength
	}
	return nil
}

func (x *Transaction_SpendingLimitsConstraintModule_AddTimelock) GetAmountAllowed() uint64 {
	if x != nil {
		return x.AmountAllowed
	}
	return 0
}

type Transaction_SpendingLimitsConstraintModule_SetTimelock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         uint64               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	PeriodLength  *durationpb.Duration `protobuf:"bytes,2,opt,name=periodLength,proto3" json:"periodLength,omitempty"`
	AmountAllowed uint64               `protobuf:"varint,3,opt,name=amountAllowed,proto3" json:"amountAllowed,omitempty"`
}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) Reset() {
	*x = Transaction_SpendingLimitsConstraintModule_SetTimelock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SpendingLimitsConstraintModule_SetTimelock) ProtoMessage() {}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SpendingLimitsConstraintModule_SetTimelock.ProtoReflect.Descriptor instead.
func (*Transaction_SpendingLimitsConstraintModule_SetTimelock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 10, 2}
}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) GetPeriodLength() *durationpb.Duration {
	if x != nil {
		return x.PeriodLength
	}
	return nil
}

func (x *Transaction_SpendingLimitsConstraintModule_SetTimelock) GetAmountAllowed() uint64 {
	if x != nil {
		return x.AmountAllowed
	}
	return 0
}

type Transaction_SpendingLimitsConstraintModule_DeleteTimelock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *Transaction_SpendingLimitsConstraintModule_DeleteTimelock) Reset() {
	*x = Transaction_SpendingLimitsConstraintModule_DeleteTimelock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_SpendingLimitsConstraintModule_DeleteTimelock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_SpendingLimitsConstraintModule_DeleteTimelock) ProtoMessage() {}

func (x *Transaction_SpendingLimitsConstraintModule_DeleteTimelock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_SpendingLimitsConstraintModule_DeleteTimelock.ProtoReflect.Descriptor instead.
func (*Transaction_SpendingLimitsConstraintModule_DeleteTimelock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 10, 3}
}

func (x *Transaction_SpendingLimitsConstraintModule_DeleteTimelock) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress string `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
}

func (x *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) Reset() {
	*x = Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) ProtoMessage() {}

func (x *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 11, 0}
}

func (x *Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

type Transaction_TimeLockConstraintModule_EditAmountTimeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Time    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Amount  uint64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) Reset() {
	*x = Transaction_TimeLockConstraintModule_EditAmountTimeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TimeLockConstraintModule_EditAmountTimeLock) ProtoMessage() {}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TimeLockConstraintModule_EditAmountTimeLock.ProtoReflect.Descriptor instead.
func (*Transaction_TimeLockConstraintModule_EditAmountTimeLock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 11, 1}
}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Transaction_TimeLockConstraintModule_EditAmountTimeLock) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Transaction_TimeLockConstraintModule_EditAccountTimeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Time    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Transaction_TimeLockConstraintModule_EditAccountTimeLock) Reset() {
	*x = Transaction_TimeLockConstraintModule_EditAccountTimeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TimeLockConstraintModule_EditAccountTimeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TimeLockConstraintModule_EditAccountTimeLock) ProtoMessage() {}

func (x *Transaction_TimeLockConstraintModule_EditAccountTimeLock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TimeLockConstraintModule_EditAccountTimeLock.ProtoReflect.Descriptor instead.
func (*Transaction_TimeLockConstraintModule_EditAccountTimeLock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 11, 2}
}

func (x *Transaction_TimeLockConstraintModule_EditAccountTimeLock) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Transaction_TimeLockConstraintModule_EditAccountTimeLock) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Transaction_TimeLockConstraintModule_EditTimeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Transaction_TimeLockConstraintModule_EditTimeLock) Reset() {
	*x = Transaction_TimeLockConstraintModule_EditTimeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_TimeLockConstraintModule_EditTimeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_TimeLockConstraintModule_EditTimeLock) ProtoMessage() {}

func (x *Transaction_TimeLockConstraintModule_EditTimeLock) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_TimeLockConstraintModule_EditTimeLock.ProtoReflect.Descriptor instead.
func (*Transaction_TimeLockConstraintModule_EditTimeLock) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 11, 3}
}

func (x *Transaction_TimeLockConstraintModule_EditTimeLock) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress string `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
}

func (x *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) Reset() {
	*x = Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) ProtoMessage() {
}

func (x *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 12, 0}
}

func (x *Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

type Transaction_VestingPeriodConstraintModule_SetVestingOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingStart             *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=vestingStart,proto3" json:"vestingStart,omitempty"`
	VestedFractionAfterStart uint64                 `protobuf:"varint,2,opt,name=vestedFractionAfterStart,proto3" json:"vestedFractionAfterStart,omitempty"`
	VestingRatio             uint64                 `protobuf:"varint,3,opt,name=vestingRatio,proto3" json:"vestingRatio,omitempty"`
}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) Reset() {
	*x = Transaction_VestingPeriodConstraintModule_SetVestingOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_VestingPeriodConstraintModule_SetVestingOptions) ProtoMessage() {}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_VestingPeriodConstraintModule_SetVestingOptions.ProtoReflect.Descriptor instead.
func (*Transaction_VestingPeriodConstraintModule_SetVestingOptions) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 12, 1}
}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) GetVestingStart() *timestamppb.Timestamp {
	if x != nil {
		return x.VestingStart
	}
	return nil
}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) GetVestedFractionAfterStart() uint64 {
	if x != nil {
		return x.VestedFractionAfterStart
	}
	return 0
}

func (x *Transaction_VestingPeriodConstraintModule_SetVestingOptions) GetVestingRatio() uint64 {
	if x != nil {
		return x.VestingRatio
	}
	return 0
}

type Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress string `protobuf:"bytes,1,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
}

func (x *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) Reset() {
	*x = Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) ProtoMessage() {}

func (x *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule.ProtoReflect.Descriptor instead.
func (*Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 13, 0}
}

func (x *Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

type Transaction_WhitelistConstraintModule_EditWhitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Whitelisted bool   `protobuf:"varint,2,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
}

func (x *Transaction_WhitelistConstraintModule_EditWhitelist) Reset() {
	*x = Transaction_WhitelistConstraintModule_EditWhitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_WhitelistConstraintModule_EditWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_WhitelistConstraintModule_EditWhitelist) ProtoMessage() {}

func (x *Transaction_WhitelistConstraintModule_EditWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_WhitelistConstraintModule_EditWhitelist.ProtoReflect.Descriptor instead.
func (*Transaction_WhitelistConstraintModule_EditWhitelist) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 13, 1}
}

func (x *Transaction_WhitelistConstraintModule_EditWhitelist) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Transaction_WhitelistConstraintModule_EditWhitelist) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

type Transaction_WhitelistConstraintModule_BulkEditWhitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts    []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Whitelisted bool     `protobuf:"varint,2,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
}

func (x *Transaction_WhitelistConstraintModule_BulkEditWhitelist) Reset() {
	*x = Transaction_WhitelistConstraintModule_BulkEditWhitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_transaction_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction_WhitelistConstraintModule_BulkEditWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_WhitelistConstraintModule_BulkEditWhitelist) ProtoMessage() {}

func (x *Transaction_WhitelistConstraintModule_BulkEditWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_schema_transaction_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_WhitelistConstraintModule_BulkEditWhitelist.ProtoReflect.Descriptor instead.
func (*Transaction_WhitelistConstraintModule_BulkEditWhitelist) Descriptor() ([]byte, []int) {
	return file_schema_transaction_proto_rawDescGZIP(), []int{0, 13, 2}
}

func (x *Transaction_WhitelistConstraintModule_BulkEditWhitelist) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Transaction_WhitelistConstraintModule_BulkEditWhitelist) GetWhitelisted() bool {
	if x != nil {
		return x.Whitelisted
	}
	return false
}

var File_schema_transaction_proto protoreflect.FileDescriptor

var file_schema_transaction_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x43, 0x0a,
	0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x7e, 0x0a, 0x16, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x4e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x65, 0x77, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x16,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x71, 0x0a, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x42, 0x75, 0x6c,
	0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x14, 0x62, 0x75, 0x6c, 0x6b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0b, 0x73, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x65, 0x0a, 0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x11, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x80, 0x01, 0x0a, 0x19, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x0f, 0x72, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x65, 0x0a, 0x10, 0x72, 0x65, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x10,
	0x72, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x75, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x75,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x07, 0x75, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x77,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x48, 0x00, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x65, 0x0a, 0x11,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x52, 0x61, 0x77, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x5c, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x52, 0x61, 0x77,
	0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x71, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x89, 0x01, 0x0a, 0x1b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x1b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x8c, 0x01, 0x0a, 0x1c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x1c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x83, 0x01, 0x0a, 0x19, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52,
	0x43, 0x31, 0x34, 0x30, 0x30, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x19, 0x72, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30,
	0x30, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x74, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x45, 0x52, 0x43, 0x32, 0x30, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x45, 0x52, 0x43, 0x32, 0x30, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x58,
	0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x45, 0x52, 0x43, 0x32, 0x30, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x65, 0x74, 0x43,
	0x61, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x43, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x70, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x74, 0x43, 0x61,
	0x70, 0x12, 0x74, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x15, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x62, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x59, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72,
	0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x24,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x24, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x67, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x64,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x67, 0x0a, 0x0b, 0x73, 0x65, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x70, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x9a, 0x01, 0x0a, 0x1e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x1e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x76, 0x0a, 0x12, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x12, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x79, 0x0a, 0x13, 0x65, 0x64, 0x69,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x13, 0x65, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x64, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x64,
	0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0xae, 0x01, 0x0a, 0x23, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x23, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x1f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x52, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x74, 0x0a, 0x11, 0x62, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2e,
	0x42, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x62, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xdb, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x1a,
	0xc2, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x72, 0x61,
	0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x97, 0x05, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x84, 0x01, 0x0a, 0x14, 0x42, 0x75, 0x6c, 0x6b, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x67, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x66, 0x0a, 0x10, 0x49, 0x73, 0x73, 0x75, 0x65, 0x42,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x5b,
	0x0a, 0x11, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xa9, 0x01, 0x0a, 0x19,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x42, 0x79,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x1a, 0x12, 0x0a, 0x10, 0x52, 0x65,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1e,
	0x0a, 0x08, 0x50, 0x61, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x07, 0x0a, 0x05, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x1a, 0x3a,
	0x0a, 0x07, 0x4f, 0x77, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x2f, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x6b, 0x0a, 0x0a, 0x45, 0x52,
	0x43, 0x31, 0x34, 0x30, 0x30, 0x52, 0x61, 0x77, 0x1a, 0x2f, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x2c, 0x0a, 0x0e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0xc3, 0x05, 0x0a, 0x10, 0x45, 0x52, 0x43, 0x31,
	0x34, 0x30, 0x30, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x75, 0x0a, 0x13,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0xad, 0x01, 0x0a, 0x1b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x58, 0x0a, 0x1c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x55, 0x0a,
	0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42,
	0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x1a, 0x4c, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x88, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xc5, 0x01,
	0x0a, 0x0c, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30, 0x45, 0x52, 0x43, 0x32, 0x30, 0x1a, 0x30,
	0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x39, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x48, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x31, 0x0a, 0x0d, 0x45, 0x52, 0x43, 0x31, 0x34, 0x30, 0x30,
	0x43, 0x61, 0x70, 0x70, 0x65, 0x64, 0x1a, 0x20, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x43, 0x61, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x70, 0x1a, 0x66, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x55, 0x0a, 0x15, 0x53, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x1a, 0xe9, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3f, 0x0a, 0x0b, 0x42,
	0x75, 0x6c, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0a,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x1a, 0x93, 0x03, 0x0a,
	0x1e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a,
	0x4a, 0x0a, 0x24, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x72, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x1a,
	0x88, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x1a, 0x26, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x1a, 0xf9, 0x02, 0x0a, 0x18, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a,
	0x44, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x76, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x5f, 0x0a,
	0x13, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x3e,
	0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0xa0,
	0x02, 0x0a, 0x1d, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x1a, 0x49, 0x0a, 0x23, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xb3, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x3a, 0x0a, 0x18, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x18, 0x76, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x1a, 0x82, 0x02, 0x0a, 0x19, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x1a,
	0x45, 0x0a, 0x1f, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x4b, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x1a, 0x51, 0x0a, 0x11, 0x42, 0x75, 0x6c, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x6a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_transaction_proto_rawDescOnce sync.Once
	file_schema_transaction_proto_rawDescData = file_schema_transaction_proto_rawDesc
)

func file_schema_transaction_proto_rawDescGZIP() []byte {
	file_schema_transaction_proto_rawDescOnce.Do(func() {
		file_schema_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_transaction_proto_rawDescData)
	})
	return file_schema_transaction_proto_rawDescData
}

var file_schema_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_schema_transaction_proto_goTypes = []interface{}{
	(*Transaction)(nil),                                                                     // 0: transaction.Transaction
	(*Transaction_SecurityTokenFactory)(nil),                                                // 1: transaction.Transaction.SecurityTokenFactory
	(*Transaction_SecurityToken)(nil),                                                       // 2: transaction.Transaction.SecurityToken
	(*Transaction_Pausable)(nil),                                                            // 3: transaction.Transaction.Pausable
	(*Transaction_Ownable)(nil),                                                             // 4: transaction.Transaction.Ownable
	(*Transaction_ERC1400Raw)(nil),                                                          // 5: transaction.Transaction.ERC1400Raw
	(*Transaction_ERC1400Partition)(nil),                                                    // 6: transaction.Transaction.ERC1400Partition
	(*Transaction_ERC1400ERC20)(nil),                                                        // 7: transaction.Transaction.ERC1400ERC20
	(*Transaction_ERC1400Capped)(nil),                                                       // 8: transaction.Transaction.ERC1400Capped
	(*Transaction_Constrainable)(nil),                                                       // 9: transaction.Transaction.Constrainable
	(*Transaction_Administrable)(nil),                                                       // 10: transaction.Transaction.Administrable
	(*Transaction_SpendingLimitsConstraintModule)(nil),                                      // 11: transaction.Transaction.SpendingLimitsConstraintModule
	(*Transaction_TimeLockConstraintModule)(nil),                                            // 12: transaction.Transaction.TimeLockConstraintModule
	(*Transaction_VestingPeriodConstraintModule)(nil),                                       // 13: transaction.Transaction.VestingPeriodConstraintModule
	(*Transaction_WhitelistConstraintModule)(nil),                                           // 14: transaction.Transaction.WhitelistConstraintModule
	(*Transaction_Metadata)(nil),                                                            // 15: transaction.Transaction.Metadata
	(*Transaction_SecurityTokenFactory_DeployNewSecurityToken)(nil),                         // 16: transaction.Transaction.SecurityTokenFactory.DeployNewSecurityToken
	(*Transaction_SecurityToken_BulkIssueByPartition)(nil),                                  // 17: transaction.Transaction.SecurityToken.BulkIssueByPartition
	(*Transaction_SecurityToken_SetDocument)(nil),                                           // 18: transaction.Transaction.SecurityToken.SetDocument
	(*Transaction_SecurityToken_IssueByPartition)(nil),                                      // 19: transaction.Transaction.SecurityToken.IssueByPartition
	(*Transaction_SecurityToken_RedeemByPartition)(nil),                                     // 20: transaction.Transaction.SecurityToken.RedeemByPartition
	(*Transaction_SecurityToken_OperatorRedeemByPartition)(nil),                             // 21: transaction.Transaction.SecurityToken.OperatorRedeemByPartition
	(*Transaction_SecurityToken_RenounceControl)(nil),                                       // 22: transaction.Transaction.SecurityToken.RenounceControl
	(*Transaction_SecurityToken_RenounceIssuance)(nil),                                      // 23: transaction.Transaction.SecurityToken.RenounceIssuance
	(*Transaction_Pausable_Pause)(nil),                                                      // 24: transaction.Transaction.Pausable.Pause
	(*Transaction_Pausable_Unpause)(nil),                                                    // 25: transaction.Transaction.Pausable.Unpause
	(*Transaction_Ownable_TransferOwnership)(nil),                                           // 26: transaction.Transaction.Ownable.TransferOwnership
	(*Transaction_ERC1400Raw_AuthorizeOperator)(nil),                                        // 27: transaction.Transaction.ERC1400Raw.AuthorizeOperator
	(*Transaction_ERC1400Raw_RevokeOperator)(nil),                                           // 28: transaction.Transaction.ERC1400Raw.RevokeOperator
	(*Transaction_ERC1400Partition_TransferByPartition)(nil),                                // 29: transaction.Transaction.ERC1400Partition.TransferByPartition
	(*Transaction_ERC1400Partition_OperatorTransferByPartition)(nil),                        // 30: transaction.Transaction.ERC1400Partition.OperatorTransferByPartition
	(*Transaction_ERC1400Partition_AuthorizeOperatorByPartition)(nil),                       // 31: transaction.Transaction.ERC1400Partition.AuthorizeOperatorByPartition
	(*Transaction_ERC1400Partition_RevokeOperatorByPartition)(nil),                          // 32: transaction.Transaction.ERC1400Partition.RevokeOperatorByPartition
	(*Transaction_ERC1400Partition_TransferWithData)(nil),                                   // 33: transaction.Transaction.ERC1400Partition.TransferWithData
	(*Transaction_ERC1400Partition_TransferFromWithData)(nil),                               // 34: transaction.Transaction.ERC1400Partition.TransferFromWithData
	(*Transaction_ERC1400ERC20_Transfer)(nil),                                               // 35: transaction.Transaction.ERC1400ERC20.Transfer
	(*Transaction_ERC1400ERC20_Approve)(nil),                                                // 36: transaction.Transaction.ERC1400ERC20.Approve
	(*Transaction_ERC1400ERC20_TransferFrom)(nil),                                           // 37: transaction.Transaction.ERC1400ERC20.TransferFrom
	(*Transaction_ERC1400Capped_SetCap)(nil),                                                // 38: transaction.Transaction.ERC1400Capped.SetCap
	(*Transaction_Constrainable_SetModulesByPartition)(nil),                                 // 39: transaction.Transaction.Constrainable.SetModulesByPartition
	(*Transaction_Administrable_AddRole)(nil),                                               // 40: transaction.Transaction.Administrable.AddRole
	(*Transaction_Administrable_BulkAddRole)(nil),                                           // 41: transaction.Transaction.Administrable.BulkAddRole
	(*Transaction_Administrable_RemoveRole)(nil),                                            // 42: transaction.Transaction.Administrable.RemoveRole
	(*Transaction_Administrable_RenounceRole)(nil),                                          // 43: transaction.Transaction.Administrable.RenounceRole
	(*Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule)(nil), // 44: transaction.Transaction.SpendingLimitsConstraintModule.DeploySpendingLimitsConstraintModule
	(*Transaction_SpendingLimitsConstraintModule_AddTimelock)(nil),                          // 45: transaction.Transaction.SpendingLimitsConstraintModule.AddTimelock
	(*Transaction_SpendingLimitsConstraintModule_SetTimelock)(nil),                          // 46: transaction.Transaction.SpendingLimitsConstraintModule.SetTimelock
	(*Transaction_SpendingLimitsConstraintModule_DeleteTimelock)(nil),                       // 47: transaction.Transaction.SpendingLimitsConstraintModule.DeleteTimelock
	(*Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule)(nil),             // 48: transaction.Transaction.TimeLockConstraintModule.DeployTimeLockConstraintModule
	(*Transaction_TimeLockConstraintModule_EditAmountTimeLock)(nil),                         // 49: transaction.Transaction.TimeLockConstraintModule.EditAmountTimeLock
	(*Transaction_TimeLockConstraintModule_EditAccountTimeLock)(nil),                        // 50: transaction.Transaction.TimeLockConstraintModule.EditAccountTimeLock
	(*Transaction_TimeLockConstraintModule_EditTimeLock)(nil),                               // 51: transaction.Transaction.TimeLockConstraintModule.EditTimeLock
	(*Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule)(nil),   // 52: transaction.Transaction.VestingPeriodConstraintModule.DeployVestingPeriodConstraintModule
	(*Transaction_VestingPeriodConstraintModule_SetVestingOptions)(nil),                     // 53: transaction.Transaction.VestingPeriodConstraintModule.SetVestingOptions
	(*Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule)(nil),           // 54: transaction.Transaction.WhitelistConstraintModule.DeployWhitelistConstraintModule
	(*Transaction_WhitelistConstraintModule_EditWhitelist)(nil),                             // 55: transaction.Transaction.WhitelistConstraintModule.EditWhitelist
	(*Transaction_WhitelistConstraintModule_BulkEditWhitelist)(nil),                         // 56: transaction.Transaction.WhitelistConstraintModule.BulkEditWhitelist
	(*timestamppb.Timestamp)(nil),                                                           // 57: google.protobuf.Timestamp
	(*SecurityToken_Metadata)(nil),                                                          // 58: token.SecurityToken.Metadata
	(*durationpb.Duration)(nil),                                                             // 59: google.protobuf.Duration
}
var file_schema_transaction_proto_depIdxs = []int32{
	15, // 0: transaction.Transaction.metadata:type_name -> transaction.Transaction.Metadata
	16, // 1: transaction.Transaction.deployNewSecurityToken:type_name -> transaction.Transaction.SecurityTokenFactory.DeployNewSecurityToken
	17, // 2: transaction.Transaction.bulkIssueByPartition:type_name -> transaction.Transaction.SecurityToken.BulkIssueByPartition
	18, // 3: transaction.Transaction.setDocument:type_name -> transaction.Transaction.SecurityToken.SetDocument
	19, // 4: transaction.Transaction.issueByPartition:type_name -> transaction.Transaction.SecurityToken.IssueByPartition
	20, // 5: transaction.Transaction.redeemByPartition:type_name -> transaction.Transaction.SecurityToken.RedeemByPartition
	21, // 6: transaction.Transaction.operatorRedeemByPartition:type_name -> transaction.Transaction.SecurityToken.OperatorRedeemByPartition
	22, // 7: transaction.Transaction.renounceControl:type_name -> transaction.Transaction.SecurityToken.RenounceControl
	23, // 8: transaction.Transaction.renounceIssuance:type_name -> transaction.Transaction.SecurityToken.RenounceIssuance
	24, // 9: transaction.Transaction.pause:type_name -> transaction.Transaction.Pausable.Pause
	25, // 10: transaction.Transaction.unpause:type_name -> transaction.Transaction.Pausable.Unpause
	26, // 11: transaction.Transaction.transferOwnership:type_name -> transaction.Transaction.Ownable.TransferOwnership
	27, // 12: transaction.Transaction.authorizeOperator:type_name -> transaction.Transaction.ERC1400Raw.AuthorizeOperator
	28, // 13: transaction.Transaction.revokeOperator:type_name -> transaction.Transaction.ERC1400Raw.RevokeOperator
	29, // 14: transaction.Transaction.transferByPartition:type_name -> transaction.Transaction.ERC1400Partition.TransferByPartition
	30, // 15: transaction.Transaction.operatorTransferByPartition:type_name -> transaction.Transaction.ERC1400Partition.OperatorTransferByPartition
	31, // 16: transaction.Transaction.authorizeOperatorByPartition:type_name -> transaction.Transaction.ERC1400Partition.AuthorizeOperatorByPartition
	32, // 17: transaction.Transaction.revokeOperatorByPartition:type_name -> transaction.Transaction.ERC1400Partition.RevokeOperatorByPartition
	33, // 18: transaction.Transaction.transferWithData:type_name -> transaction.Transaction.ERC1400Partition.TransferWithData
	34, // 19: transaction.Transaction.transferFromWithData:type_name -> transaction.Transaction.ERC1400Partition.TransferFromWithData
	35, // 20: transaction.Transaction.transfer:type_name -> transaction.Transaction.ERC1400ERC20.Transfer
	36, // 21: transaction.Transaction.approve:type_name -> transaction.Transaction.ERC1400ERC20.Approve
	37, // 22: transaction.Transaction.transferFrom:type_name -> transaction.Transaction.ERC1400ERC20.TransferFrom
	38, // 23: transaction.Transaction.setCap:type_name -> transaction.Transaction.ERC1400Capped.SetCap
	39, // 24: transaction.Transaction.setModulesByPartition:type_name -> transaction.Transaction.Constrainable.SetModulesByPartition
	40, // 25: transaction.Transaction.addRole:type_name -> transaction.Transaction.Administrable.AddRole
	41, // 26: transaction.Transaction.bulkAddRole:type_name -> transaction.Transaction.Administrable.BulkAddRole
	42, // 27: transaction.Transaction.removeRole:type_name -> transaction.Transaction.Administrable.RemoveRole
	43, // 28: transaction.Transaction.renounceRole:type_name -> transaction.Transaction.Administrable.RenounceRole
	44, // 29: transaction.Transaction.deploySpendingLimitsConstraintModule:type_name -> transaction.Transaction.SpendingLimitsConstraintModule.DeploySpendingLimitsConstraintModule
	45, // 30: transaction.Transaction.addTimelock:type_name -> transaction.Transaction.SpendingLimitsConstraintModule.AddTimelock
	46, // 31: transaction.Transaction.setTimelock:type_name -> transaction.Transaction.SpendingLimitsConstraintModule.SetTimelock
	47, // 32: transaction.Transaction.deleteTimelock:type_name -> transaction.Transaction.SpendingLimitsConstraintModule.DeleteTimelock
	48, // 33: transaction.Transaction.deployTimeLockConstraintModule:type_name -> transaction.Transaction.TimeLockConstraintModule.DeployTimeLockConstraintModule
	49, // 34: transaction.Transaction.editAmountTimeLock:type_name -> transaction.Transaction.TimeLockConstraintModule.EditAmountTimeLock
	50, // 35: transaction.Transaction.editAccountTimeLock:type_name -> transaction.Transaction.TimeLockConstraintModule.EditAccountTimeLock
	51, // 36: transaction.Transaction.editTimeLock:type_name -> transaction.Transaction.TimeLockConstraintModule.EditTimeLock
	52, // 37: transaction.Transaction.deployVestingPeriodConstraintModule:type_name -> transaction.Transaction.VestingPeriodConstraintModule.DeployVestingPeriodConstraintModule
	53, // 38: transaction.Transaction.setVestingOptions:type_name -> transaction.Transaction.VestingPeriodConstraintModule.SetVestingOptions
	54, // 39: transaction.Transaction.deployWhitelistConstraintModule:type_name -> transaction.Transaction.WhitelistConstraintModule.DeployWhitelistConstraintModule
	55, // 40: transaction.Transaction.editWhitelist:type_name -> transaction.Transaction.WhitelistConstraintModule.EditWhitelist
	56, // 41: transaction.Transaction.bulkEditWhitelist:type_name -> transaction.Transaction.WhitelistConstraintModule.BulkEditWhitelist
	57, // 42: transaction.Transaction.Metadata.date:type_name -> google.protobuf.Timestamp
	58, // 43: transaction.Transaction.SecurityTokenFactory.DeployNewSecurityToken.metadata:type_name -> token.SecurityToken.Metadata
	59, // 44: transaction.Transaction.SpendingLimitsConstraintModule.AddTimelock.periodLength:type_name -> google.protobuf.Duration
	59, // 45: transaction.Transaction.SpendingLimitsConstraintModule.SetTimelock.periodLength:type_name -> google.protobuf.Duration
	57, // 46: transaction.Transaction.TimeLockConstraintModule.EditAmountTimeLock.time:type_name -> google.protobuf.Timestamp
	57, // 47: transaction.Transaction.TimeLockConstraintModule.EditAccountTimeLock.time:type_name -> google.protobuf.Timestamp
	57, // 48: transaction.Transaction.TimeLockConstraintModule.EditTimeLock.time:type_name -> google.protobuf.Timestamp
	57, // 49: transaction.Transaction.VestingPeriodConstraintModule.SetVestingOptions.vestingStart:type_name -> google.protobuf.Timestamp
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_schema_transaction_proto_init() }
func file_schema_transaction_proto_init() {
	if File_schema_transaction_proto != nil {
		return
	}
	file_schema_token_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_schema_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityTokenFactory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Pausable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Ownable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Raw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400ERC20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Capped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Constrainable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Administrable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SpendingLimitsConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TimeLockConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_VestingPeriodConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_WhitelistConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityTokenFactory_DeployNewSecurityToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_BulkIssueByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_SetDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_IssueByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_RedeemByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_OperatorRedeemByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_RenounceControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SecurityToken_RenounceIssuance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Pausable_Pause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Pausable_Unpause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Ownable_TransferOwnership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Raw_AuthorizeOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Raw_RevokeOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_TransferByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_OperatorTransferByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_AuthorizeOperatorByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_RevokeOperatorByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_TransferWithData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Partition_TransferFromWithData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400ERC20_Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400ERC20_Approve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400ERC20_TransferFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_ERC1400Capped_SetCap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Constrainable_SetModulesByPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Administrable_AddRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Administrable_BulkAddRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Administrable_RemoveRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_Administrable_RenounceRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SpendingLimitsConstraintModule_DeploySpendingLimitsConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SpendingLimitsConstraintModule_AddTimelock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SpendingLimitsConstraintModule_SetTimelock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_SpendingLimitsConstraintModule_DeleteTimelock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TimeLockConstraintModule_DeployTimeLockConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TimeLockConstraintModule_EditAmountTimeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TimeLockConstraintModule_EditAccountTimeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_TimeLockConstraintModule_EditTimeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_VestingPeriodConstraintModule_DeployVestingPeriodConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_VestingPeriodConstraintModule_SetVestingOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_WhitelistConstraintModule_DeployWhitelistConstraintModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_WhitelistConstraintModule_EditWhitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_transaction_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction_WhitelistConstraintModule_BulkEditWhitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_transaction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Transaction_DeployNewSecurityToken)(nil),
		(*Transaction_BulkIssueByPartition)(nil),
		(*Transaction_SetDocument)(nil),
		(*Transaction_IssueByPartition)(nil),
		(*Transaction_RedeemByPartition)(nil),
		(*Transaction_OperatorRedeemByPartition)(nil),
		(*Transaction_RenounceControl)(nil),
		(*Transaction_RenounceIssuance)(nil),
		(*Transaction_Pause)(nil),
		(*Transaction_Unpause)(nil),
		(*Transaction_TransferOwnership)(nil),
		(*Transaction_AuthorizeOperator)(nil),
		(*Transaction_RevokeOperator)(nil),
		(*Transaction_TransferByPartition)(nil),
		(*Transaction_OperatorTransferByPartition)(nil),
		(*Transaction_AuthorizeOperatorByPartition)(nil),
		(*Transaction_RevokeOperatorByPartition)(nil),
		(*Transaction_TransferWithData)(nil),
		(*Transaction_TransferFromWithData)(nil),
		(*Transaction_Transfer)(nil),
		(*Transaction_Approve)(nil),
		(*Transaction_TransferFrom)(nil),
		(*Transaction_SetCap)(nil),
		(*Transaction_SetModulesByPartition)(nil),
		(*Transaction_AddRole)(nil),
		(*Transaction_BulkAddRole)(nil),
		(*Transaction_RemoveRole)(nil),
		(*Transaction_RenounceRole)(nil),
		(*Transaction_DeploySpendingLimitsConstraintModule)(nil),
		(*Transaction_AddTimelock)(nil),
		(*Transaction_SetTimelock)(nil),
		(*Transaction_DeleteTimelock)(nil),
		(*Transaction_DeployTimeLockConstraintModule)(nil),
		(*Transaction_EditAmountTimeLock)(nil),
		(*Transaction_EditAccountTimeLock)(nil),
		(*Transaction_EditTimeLock)(nil),
		(*Transaction_DeployVestingPeriodConstraintModule)(nil),
		(*Transaction_SetVestingOptions)(nil),
		(*Transaction_DeployWhitelistConstraintModule)(nil),
		(*Transaction_EditWhitelist)(nil),
		(*Transaction_BulkEditWhitelist)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_transaction_proto_goTypes,
		DependencyIndexes: file_schema_transaction_proto_depIdxs,
		MessageInfos:      file_schema_transaction_proto_msgTypes,
	}.Build()
	File_schema_transaction_proto = out.File
	file_schema_transaction_proto_rawDesc = nil
	file_schema_transaction_proto_goTypes = nil
	file_schema_transaction_proto_depIdxs = nil
}
