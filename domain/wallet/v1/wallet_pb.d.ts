// @generated by protoc-gen-es v1.1.1
// @generated from file wallet/v1/wallet.proto (package wallet.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Document_Metadata, Partition_Metadata, SecurityToken_Metadata } from "../../token/v1/token_pb.js";
import type { Account_Metadata } from "../../account/v1/account_pb.js";
import type { Transaction } from "../../transaction/v1/transaction_pb.js";

/**
 * @generated from message wallet.v1.Wallet
 */
export declare class Wallet extends Message<Wallet> {
  /**
   * @generated from field: string account = 1;
   */
  account: string;

  /**
   * @generated from field: string network_id = 2;
   */
  networkId: string;

  /**
   * @generated from field: map<string, wallet.v1.Wallet.Project> projects = 3;
   */
  projects: { [key: string]: Wallet_Project };

  constructor(data?: PartialMessage<Wallet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wallet.v1.Wallet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wallet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wallet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wallet;

  static equals(a: Wallet | PlainMessage<Wallet> | undefined, b: Wallet | PlainMessage<Wallet> | undefined): boolean;
}

/**
 * @generated from message wallet.v1.Wallet.Project
 */
export declare class Wallet_Project extends Message<Wallet_Project> {
  /**
   * @generated from field: token.v1.SecurityToken.Metadata token = 1;
   */
  token?: SecurityToken_Metadata;

  /**
   * @generated from field: map<string, token.v1.Partition.Metadata> partitions = 2;
   */
  partitions: { [key: string]: Partition_Metadata };

  /**
   * @generated from field: map<string, token.v1.Document.Metadata> documents = 3;
   */
  documents: { [key: string]: Document_Metadata };

  /**
   * @generated from field: map<string, account.v1.Account.Metadata> accounts = 4;
   */
  accounts: { [key: string]: Account_Metadata };

  /**
   * @generated from field: repeated transaction.v1.Transaction transactions = 5;
   */
  transactions: Transaction[];

  constructor(data?: PartialMessage<Wallet_Project>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "wallet.v1.Wallet.Project";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wallet_Project;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wallet_Project;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wallet_Project;

  static equals(a: Wallet_Project | PlainMessage<Wallet_Project> | undefined, b: Wallet_Project | PlainMessage<Wallet_Project> | undefined): boolean;
}

